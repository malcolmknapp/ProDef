# UDL lexer for ProDef.
#
# Description: This lexer handles the formating and color of Product Definition documents.
#              Product Defintion documents are meant to be structured enough that they can be
#              programmatically parsed but also human readable. These document treat everything
#              as a string and uses various transition words to signal the chnages between formatting
#              states. 
#
# Note: UDL is a state machine and it uses regular expressions to move between
#       the different language states.
#

language ProDef

################ Boilerplate ################

# Boilerplate - need to start with family set to markup and IN_M_DEFAULT state,
# we'll later perform a null-transition change to get into the SSL state.
family markup
initial IN_M_DEFAULT
# Null-transition to get into SSL state
state IN_M_DEFAULT:
/./ : redo, => IN_SSL_DEFAULT

################ Language Start ################

family ssl # server side language

pattern OP = '<>'

# Specify the min and max styles we'll be referring to.
start_style SSL_DEFAULT
end_style SSL_VARIABLE

# If the language has keywords, specify which style needs to be transformed
keyword_style SSL_IDENTIFIER => SSL_WORD
keywords [
         # Keywords
        ]

################ Default Style ################

# Define what happens when in default (initial) state. This is where we set up
# the transitions to other states.'
state IN_SSL_DEFAULT:


'"'  : paint(upto, SSL_DEFAULT), => IN_QUOTE
'//' : paint(upto, SSL_DEFAULT), => IN_SSL_INCOMPLETE_TO_EOL
'/*' : paint(upto, SSL_DEFAULT), => IN_SSL_INCOMPLETE_C_BLOCK
'['  : paint(upto, SSL_DEFAULT), => IN_FUTURE_FEATURE

/[$OP]/  : paint(upto, SSL_DEFAULT), paint(include, SSL_OPERATOR)

/\|+[a-zA-z]/ : paint (upto, SSL_DEFAULT), => IN_HEADING
'Characteristics' : paint (upto, SSL_DEFAULT), => IN_HEADING
'Implementation' : paint (upto, SSL_DEFAULT), => IN_HEADING
'Behavior' : paint (upto, SSL_DEFAULT), => IN_HEADING

/^\s{8}-\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_1
/^\s{12}-\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_2
/^\s{16}-\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_3
/^\s{20}-\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_4

/^\s{8}\#\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_1
/^\s{12}\#\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_2
/^\s{16}\#\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_3
/^\s{20}\#\s/ : paint (include, SSL_DEFAULT), => IN_LIST_TO_EOL_4

/===+\n/ : paint (include, SSL_DEFAULT), => IN_TABLE_A




################ Start of State Handling ################
state IN_QUOTE:
'"' : paint (include, SSL_WORD), spop_check => IN_SSL_DEFAULT

state IN_SSL_INCOMPLETE_TO_EOL:
/[\r\n]/ : paint(upto, SSL_COMMENT), => IN_SSL_DEFAULT  # back to default state

state IN_SSL_INCOMPLETE_C_BLOCK: 
'*/' : paint(include, SSL_COMMENTBLOCK), => IN_SSL_DEFAULT  # back to default state

state IN_HEADING:
/[\r\n]/ : paint(upto, SSL_WORD), => IN_SSL_DEFAULT  # back to default state

state IN_LIST_TO_EOL_1:
'['  : paint(upto, M_ATTRNAME), => IN_FUTURE_FEATURE
'//' : paint(upto, M_ATTRNAME),  => IN_SSL_INCOMPLETE_TO_EOL
'"'  : paint(upto, M_ATTRNAME),spush_check(IN_LIST_TO_EOL_1), => IN_QUOTE
/[\r\n]/ : paint(upto, M_ATTRNAME), => IN_SSL_DEFAULT  # back to default state

state IN_LIST_TO_EOL_2:
'['  : paint(upto, M_CDATA), => IN_FUTURE_FEATURE
'//' : paint(upto, M_CDATA),  => IN_SSL_INCOMPLETE_TO_EOL
'"'  : paint(upto, M_ATTRNAME),spush_check(IN_LIST_TO_EOL_2), => IN_QUOTE
/[\r\n]/ : paint(upto, M_CDATA), => IN_SSL_DEFAULT  # back to default state

state IN_LIST_TO_EOL_3:

'['  : paint(upto, M_ENTITY), => IN_FUTURE_FEATURE
'//' : paint(upto, M_ENTITY),  => IN_SSL_INCOMPLETE_TO_EOL
'"'  : paint(upto, M_ATTRNAME),spush_check(IN_LIST_TO_EOL_3), => IN_QUOTE
/[\r\n]/ : paint(upto, M_ENTITY), => IN_SSL_DEFAULT  # back to default state

state IN_LIST_TO_EOL_4:
'['  : paint(upto, M_PI), => IN_FUTURE_FEATURE
'//' : paint(upto, M_PI),  => IN_SSL_INCOMPLETE_TO_EOL
'"'  : paint(upto, M_ATTRNAME),spush_check(IN_LIST_TO_EOL_4), => IN_QUOTE
/[\r\n]/ : paint(upto, M_PI), => IN_SSL_DEFAULT  # back to default state



state IN_FUTURE_FEATURE:
']' : paint(include, SSL_IDENTIFIER), => IN_SSL_DEFAULT  # back to default state


state IN_TABLE_A:
/^=+/ : paint (upto, SSL_DEFAULT), => IN_SSL_DEFAULT
/[a-zA-Z0-9\?\)\]]\s\s+/ : paint (include, SSL_VARIABLE),  => IN_TABLE_B
/[a-zA-Z0-9\?\)\]"\.]+\n/  : paint (include, SSL_VARIABLE), => IN_TABLE_B



state IN_TABLE_B:
/^===+/ : paint (upto, SSL_DEFAULT), => IN_SSL_DEFAULT
/[a-zA-Z0-9\?\)\]]\s\s+/ : paint (include, SSL_REGEX),  => IN_TABLE_A
/[a-zA-Z0-9\?\)\]"\.]+\n/  : paint (include, SSL_REGEX), => IN_TABLE_A


################ End of State Handling ################


################ Fold Handling ################

fold ">>" SSL_OPERATOR +
fold "<-->" SSL_OPERATOR +
fold "<<" SSL_OPERATOR -

################ End of Fold Handling ################


